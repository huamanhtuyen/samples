-- Table: public.chothuekho

-- DROP TABLE IF EXISTS public.chothuekho;

CREATE TABLE IF NOT EXISTS public.chothuekho
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    user_id uuid NOT NULL DEFAULT auth.uid(),
    mota text COLLATE pg_catalog."default",
    tencty text COLLATE pg_catalog."default",
    sdt1 text COLLATE pg_catalog."default",
    sdt2 text COLLATE pg_catalog."default",
    sdt3 text COLLATE pg_catalog."default",
    matinh text COLLATE pg_catalog."default",
    tentinh_tiengviet text COLLATE pg_catalog."default",
    tentinh_tienganh text COLLATE pg_catalog."default",
    tentinh_tiengtrung text COLLATE pg_catalog."default",
    tentinh_tiengthai text COLLATE pg_catalog."default",
    maquan text COLLATE pg_catalog."default",
    tenquan_tiengviet text COLLATE pg_catalog."default",
    tenquan_tienganh text COLLATE pg_catalog."default",
    tenquan_tiengtrung text COLLATE pg_catalog."default",
    tenquan_tiengthai text COLLATE pg_catalog."default",
    anh1 text COLLATE pg_catalog."default",
    anh2 text COLLATE pg_catalog."default",
    anh3 text COLLATE pg_catalog."default",
    anh4 text COLLATE pg_catalog."default",
    anh5 text COLLATE pg_catalog."default",
    anh6 text COLLATE pg_catalog."default",
    anh7 text COLLATE pg_catalog."default",
    anh8 text COLLATE pg_catalog."default",
    anh9 text COLLATE pg_catalog."default",
    CONSTRAINT chothuekho_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.chothuekho
    OWNER to postgres;

ALTER TABLE IF EXISTS public.chothuekho
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.chothuekho TO anon;

GRANT ALL ON TABLE public.chothuekho TO authenticated;

GRANT ALL ON TABLE public.chothuekho TO postgres;

GRANT ALL ON TABLE public.chothuekho TO service_role;

COMMENT ON TABLE public.chothuekho
    IS 'Cho thuÃª Cont';
-- POLICY: Enable insert for authenticated users only

-- DROP POLICY IF EXISTS "Enable insert for authenticated users only" ON public.chothuekho;

CREATE POLICY "Enable insert for authenticated users only"
    ON public.chothuekho
    AS PERMISSIVE
    FOR INSERT
    TO authenticated
    WITH CHECK (true);
-- POLICY: Enable read access for all users

-- DROP POLICY IF EXISTS "Enable read access for all users" ON public.chothuekho;

CREATE POLICY "Enable read access for all users"
    ON public.chothuekho
    AS PERMISSIVE
    FOR SELECT
    TO authenticated
    USING (true);
-- POLICY: Enable update for users based on email

-- DROP POLICY IF EXISTS "Enable update for users based on email" ON public.chothuekho;

CREATE POLICY "Enable update for users based on email"
    ON public.chothuekho
    AS PERMISSIVE
    FOR UPDATE
    TO authenticated
    USING ((auth.uid() = user_id))
    WITH CHECK ((auth.uid() = user_id));