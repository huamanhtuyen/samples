import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:go_router/go_router.dart';
import '../../../../routing/routes.dart';
import '../../core/themes/dimens.dart';
import '../view_models/home_viewmodel.dart1';
import 'app_menu.dart';

class HomeHeader extends StatefulWidget {
  const HomeHeader({
    super.key,
    required this.viewModel,
    required this.toggleMenu,
  });

  final HomeViewModel viewModel;
  final VoidCallback toggleMenu;

  @override
  _HomeHeaderState createState() => _HomeHeaderState();
}

class _HomeHeaderState extends State<HomeHeader> {
  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                SvgPicture.asset(
                  'assets/logo.svg',
                  height: Dimens.of(context).logoSize,
                ),
                Row(
                  children: [
                    IconButton(
                      icon: Icon(
                        Icons.notifications,
                        size: Dimens.of(context).menuButtonSize,
                      ),
                      padding: EdgeInsets.zero,
                      onPressed: () {
                        context.go(Routes.profile);
                      },
                    ),
                    const SizedBox(width: 16),
                    IconButton(
                      icon: Icon(
                        widget.viewModel.isMenuOpen ||
                                widget.viewModel.isMenuOpening
                            ? Icons.clear
                            : Icons.menu,
                        size: Dimens.of(context).menuButtonSize,
                      ),
                      padding: EdgeInsets.zero,
                      onPressed: widget.toggleMenu,
                    ),
                  ],
                ),
              ],
            ),
            const SizedBox(height: Dimens.paddingVertical),
          ],
        ),
        AnimatedBuilder(
          animation: widget.viewModel.menuController,
          builder: (context, child) {
            return Positioned.fill(
              child: FractionalTranslation(
                translation: Offset(
                  0.0,
                  1.0 - widget.viewModel.menuController.value,
                ),
                child:
                    widget.viewModel.isMenuClosed
                        ? const SizedBox()
                        : const Menu(),
              ),
            );
          },
        ),
      ],
    );
  }
}
