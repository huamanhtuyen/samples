
CREATE TABLE IF NOT EXISTS public.baocanhang
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    user_id uuid NOT NULL DEFAULT auth.uid(),
    email character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'updating'::character varying,
    biensoxe character varying COLLATE pg_catalog."default", 
	chieuvetu_matinh character varying COLLATE pg_catalog."default",
    chieuvetu_tentinh_tienganh character varying COLLATE pg_catalog."default",
    chieuvetu_tentinh_tiengviet character varying COLLATE pg_catalog."default",
    chieuvetu_tentinh_tiengthai character varying COLLATE pg_catalog."default",
    chieuvetu_temtinh_tiengtrung character varying COLLATE pg_catalog."default", 
	veden_matinh character varying COLLATE pg_catalog."default",
    veden_tentinh_tienganh character varying COLLATE pg_catalog."default",
    veden_tentinh_tiengviet character varying COLLATE pg_catalog."default",
    veden_tentinh_tiengthai character varying COLLATE pg_catalog."default",
    veden_temtinh_tiengtrung character varying COLLATE pg_catalog."default",
    gianhan numeric,
	gianhandvt numeric,--tiền tệ
    ngaydoitoida date, 
 
    CONSTRAINT baocanhang_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.baocanhang
    OWNER to postgres;

ALTER TABLE IF EXISTS public.baocanhang
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.baocanhang TO anon;

GRANT ALL ON TABLE public.baocanhang TO authenticated;

GRANT ALL ON TABLE public.baocanhang TO postgres;

GRANT ALL ON TABLE public.baocanhang TO service_role;
-- POLICY: Enable insert for authenticated users only

-- DROP POLICY IF EXISTS "Enable insert for authenticated users only" ON public.thongtinxe;

CREATE POLICY "Enable insert for authenticated users only"
    ON public.baocanhang
    AS PERMISSIVE
    FOR INSERT
    TO authenticated
    WITH CHECK (true);
-- POLICY: Enable read access for all users

-- DROP POLICY IF EXISTS "Enable read access for all users" ON public.thongtinxe;

CREATE POLICY "Enable read access for all users"
    ON public.baocanhang
    AS PERMISSIVE
    FOR SELECT
    TO authenticated
    USING (true);
-- POLICY: Enable update for users based on email

-- DROP POLICY IF EXISTS "Enable update for users based on email" ON public.thongtinxe;

CREATE POLICY "Enable update for users based on user_id"
    ON public.baocanhang
    AS PERMISSIVE
    FOR UPDATE
    TO public
    USING ((auth.uid() = user_id))
    WITH CHECK ((auth.uid() = user_id));

-- Trigger: thongtinxe_after_insert

-- DROP TRIGGER IF EXISTS thongtinxe_after_insert ON public.thongtinxe;

CREATE OR REPLACE TRIGGER baocanhang_after_insert
    AFTER INSERT
    ON public.baocanhang
    FOR EACH ROW
    EXECUTE FUNCTION public.after_insert_baocanhang();